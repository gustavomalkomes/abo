
meanfunc = {@meanSum, {@meanLinear, @meanConst}}; hyp.mean = [0.5; 1];
covfunc = {@covMaterniso, 3}; ell = 1/4; sf = 1; hyp.cov = log([ell; sf]);
likfunc = @likGauss; sn = 0.1; hyp.lik = log(sn);

n = 20;
x = gpml_randn(0.3, n, 1);
K = feval(covfunc{:}, hyp.cov, x);
mu = feval(meanfunc{:}, hyp.mean, x);
y = chol(K)'*gpml_randn(0.15, n, 1) + mu + exp(hyp.lik)*gpml_randn(0.2, n, 1);

y = y - mean(y);
y = y / std(y);

rng('default');
[m, c, l] = one_function(x, y, 2, 0.1);

ll = exp(l - max(l));
ll = ll / sum(ll);

x_star = linspace(-3, 5, 2e2)';

[mu, Sigma] = full_gp_posterior(hyp, [], meanfunc, covfunc, [], x, y, x_star);

Sigma = (Sigma + Sigma') / 2;

rng('default');
f = mvnrnd(mu, Sigma, 100);
ff = f(11, :)';

ms  = zeros(numel(x_star), numel(m));
vs  = zeros(numel(x_star), numel(m));
lps = zeros(numel(x_star), numel(m));
eis = zeros(numel(x_star), numel(m));
for i = 1:numel(m)
  this_m = m{i}.parameters;
  [~, ~, ms(:, i), vs(:, i), lps(:, i)] = ...
      bbq(this_m.theta, this_m.inference_method, ...
          this_m.mean_function, this_m.covariance_function, ...
          this_m.likelihood, x, y, x_star, ff);

  eis(:, i) = ...
      ei(this_m.theta, this_m.mean_function, this_m.covariance_function, ...
         x, y, x_star);
end

lpp = lps + log(ll);
mm = max(lpp, [], 2);
lppp = mm + log(sum(exp(lpp - mm), 2));

bad_ll  = mean(lps(:, 1));
good_ll = mean(lppp);

colors;
jj = 3;

[~, ind] = sort(ll, 'descend');
ind = ind(1:30);

figure(1);
clf;
hold('off');
uncertainty_hs = zeros(numel(ind), 1);
for i = 1:numel(ind)
  ii = ind(i);
  uncertainty_hs(i) = ...
      fill([x_star; flipud(x_star)], ...
           [ms(:, ii) + 2 * sqrt(vs(:, ii)); ...
            flipud(ms(:, ii) - 2 * sqrt(vs(:, ii)))], ...
           blues(1, :), ...
           'edgecolor', 'none');
  alpha(uncertainty_hs(i), ll(ii) / sum(ll(ind)) + 0.15);
  hold('on');
end
uncertainty_h = uncertainty_hs(1);

mean_h = ...
    plot(x_star, ms(:, ind) * (ll(ind) / sum(ll(ind)))', ...
         'color', blues(2, :));

sample_h = plot(x_star, f(jj, :), ...
                'color', reds(2, :));

observations_h = ...
    plot(x, y, 'k.', ...
         'markersize', marker_size);

set(gca, 'box', 'off', ...
         'xtick', [], ...
         'ytick', [])

ylim([-5, 9]);

figure_name = 'good_model';
matlab2tikz(sprintf('%s/%s.tex', figures_directory, figure_name),              ...
            'height',           '\examplefigureheight',                   ...
            'width',            '\examplefigurewidth',                         ...
            'parseStrings',     false,                                         ...
            'showInfo',         false,                                         ...
            'extraCode',        sprintf('\\tikzsetnextfilename{%s}', figure_name));

figure(1);
clf;

ei = max(0, eis * ll');
ei = ei / max(ei);
[best_alpha, best_ind] = max(ei);
best_x = x_star(best_ind);

fill([x_star; flipud(x_star)    ], ...
     [ei;  zeros(size(ei))], ...
     greens(1, :),                 ...
     'edgecolor', 'none');

hold('on');

alpha_h = ...
    plot(x_star, ei, ...
         'color', greens(2, :));

best_h = ...
    plot(best_x, best_alpha + 0.08, 'vk');

xlim([min(x_star), max(x_star)]);
ylim([0, 1.6]);

set(gca, 'box',   'off', ...
         'xtick', [], ...
         'ytick', []);

drawnow;

figure_name = 'ei_good_model';
matlab2tikz(sprintf('%s/%s.tex', figures_directory, figure_name),              ...
            'height',           '\exampleacquisitionheight',                   ...
            'width',            '\examplefigurewidth',                         ...
            'parseStrings',     false,                                         ...
            'showInfo',         false,                                         ...
            'extraCode',        sprintf('\\tikzsetnextfilename{%s}', figure_name));

figure(1);
clf;
hold('off');
uncertainty_h = ...
    fill([x_star; flipud(x_star)], ...
         [ms(:, 1) + 2 * sqrt(vs(:, 1)); ...
          flipud(ms(:, 1) - 2 * sqrt(vs(:, 1)))], ...
         blues(1, :), ...
         'edgecolor', 'none');
hold('on');

mean_h = ...
    plot(x_star, ms(:, 1), ...
         'color', blues(2, :));

sample_h = plot(x_star, f(jj, :), ...
                'color', reds(2, :));

observations_h = ...
    plot(x, y, 'k.', ...
         'markersize', marker_size);

set(gca, 'box', 'off', ...
         'xtick', [], ...
         'ytick', [])

ylim([-5, 9]);

legend([sample_h, mean_h, uncertainty_h, observations_h], ...
       'true function',                ...
       'predictive mean',             ...
       '95\% credible interval', ...
       'observations $\data$',             ...
       'location', 'north');
legend('boxoff');

figure_name = 'bad_model';
matlab2tikz(sprintf('%s/%s.tex', figures_directory, figure_name),              ...
            'height',           '\examplefigureheight',                   ...
            'width',            '\examplefigurewidth',                         ...
            'parseStrings',     false,                                         ...
            'showInfo',         false,                                         ...
            'extraAxisOptions', ['legend style={', ...
                    'legend columns=-1,', ...
                    'reverse legend,' ...
                    'at={(1, 1.25)},' ...
                    '/tikz/every even column/.append style={column sep=0.5cm},', ...
                    '/tikz/every odd column/.append style={column sep=0.1cm}}'], ...
            'extraCode',        sprintf('\\tikzsetnextfilename{%s}', figure_name));

figure(1);
clf;

ei = max(0, eis(:, 1));
ei = ei / max(ei);
[best_alpha, best_ind] = max(ei);
best_x = x_star(best_ind);

fill([x_star; flipud(x_star)    ], ...
     [ei;  zeros(size(ei))], ...
     greens(1, :),                 ...
     'edgecolor', 'none');

hold('on');

alpha_h = ...
    plot(x_star, ei, ...
         'color', greens(2, :));

best_h = ...
    plot(best_x, best_alpha + 0.08, 'vk');

ylim([0, 1.6]);

set(gca, 'box',   'off', ...
         'xtick', [], ...
         'ytick', []);

legend([alpha_h, best_h], ...
       'expected improvement', ...
       'next observation location', ...
       'location', 'north');
legend('boxoff');

drawnow;

figure_name = 'ei_bad_model';
matlab2tikz(sprintf('%s/%s.tex', figures_directory, figure_name),              ...
            'height',           '\exampleacquisitionheight',                   ...
            'width',            '\examplefigurewidth',                         ...
            'parseStrings',     false,                                         ...
            'showInfo',         false,                                         ...
            'extraAxisOptions', ['legend style={', ...
                    'legend columns=1,' ...
                    'at={(0.3,1)},', ...
                    '/tikz/every even column/.append style={column sep=0.5cm},', ...
                    '/tikz/every odd column/.append style={column sep=0.1cm}}'], ...
            'extraCode',        sprintf('\\tikzsetnextfilename{%s}', figure_name));